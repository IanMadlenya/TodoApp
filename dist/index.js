"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return call&&(typeof call==="object"||typeof call==="function")?call:self}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}/// <reference path="./../typings/FileSaver/FileSaver.d.ts"/>
/// <reference path="./../typings/c3/c3.d.ts"/>
/// <reference path="./../typings/classnames/classnames.d.ts"/>
/// <reference path="./../typings/clipboard/clipboard.d.ts"/>
/// <reference path="./../typings/codemirror/codemirror.d.ts"/>
/// <reference path="./../typings/codemirror/react-codemirror.d.ts"/>
/// <reference path="./../typings/d3/d3.d.ts"/>
/// <reference path="./../typings/fixed-data-table/fixed-data-table.d.ts"/>
/// <reference path="./../typings/fuse/fuse.d.ts"/>
/// <reference path="./../typings/jquery/jquery.d.ts"/>
/// <reference path="./../typings/jszip/jszip.d.ts"/>
/// <reference path="./../typings/lodash/lodash.d.ts"/>
/// <reference path="./../typings/moment/moment-node.d.ts"/>
/// <reference path="./../typings/moment/moment.d.ts"/>
/// <reference path="./../typings/openlayers/openlayers.d.ts"/>
/// <reference path="./../typings/pixi.js/pixi.js.d.ts"/>
/// <reference path="./../typings/proj4/proj4.d.ts"/>
/// <reference path="./../typings/rc-slider/rc-slider.d.ts"/>
/// <reference path="./../typings/react-color/react-color.d.ts"/>
/// <reference path="./../typings/react-date-picker.d.ts"/>
/// <reference path="./../typings/react-dropzone/react-dropzone.d.ts"/>
/// <reference path="./../typings/react-notification-system/react-notification-system.d.ts"/>
/// <reference path="./../typings/react-sparklines/react-sparklines.d.ts"/>
/// <reference path="./../typings/react-swf/react-swf.d.ts"/>
/// <reference path="./../typings/react/react-addons-create-fragment.d.ts"/>
/// <reference path="./../typings/react/react-addons-css-transition-group.d.ts"/>
/// <reference path="./../typings/react/react-addons-linked-state-mixin.d.ts"/>
/// <reference path="./../typings/react/react-addons-perf.d.ts"/>
/// <reference path="./../typings/react/react-addons-pure-render-mixin.d.ts"/>
/// <reference path="./../typings/react/react-addons-test-utils.d.ts"/>
/// <reference path="./../typings/react/react-addons-transition-group.d.ts"/>
/// <reference path="./../typings/react/react-addons-update.d.ts"/>
/// <reference path="./../typings/react/react-dom.d.ts"/>
/// <reference path="./../typings/react/react-global.d.ts"/>
/// <reference path="./../typings/react/react.d.ts"/>
/// <reference path="./../typings/swfobject/swfobject.d.ts"/>
/// <reference path="./../typings/tsd.d.ts"/>
/// <reference path="./../typings/weave/as-types.d.ts"/>
/// <reference path="./../typings/weave/weavejs-core.d.ts"/>
/// <reference path="./../typings/weave/weavejs.d.ts"/>
var TodoApp;(function(TodoApp){var LinkableString=weavejs.core.LinkableString;var LinkableBoolean=weavejs.core.LinkableBoolean;var Todo=function Todo(){_classCallCheck(this,Todo);this.text=Weave.linkableChild(this,LinkableString);this.complete=Weave.linkableChild(this,LinkableBoolean)};TodoApp.Todo=Todo;Weave.registerClass(Todo,"weavejs.app.TodoApp.Todo",null,"Todo")})(TodoApp||(TodoApp={}));var TodoApp;(function(TodoApp){var store;(function(store){var LinkableHashMap=weavejs.core.LinkableHashMap;var LinkableBoolean=weavejs.core.LinkableBoolean;var TodoStore=function(){function TodoStore(){var _this=this;_classCallCheck(this,TodoStore);this.store=new Weave;this.undo=function(){_this.store.history.undo()};this.redo=function(){_this.store.history.redo()};this.store.root.requestObject(TodoStore.TODO,LinkableHashMap,true);this.store.root.requestObject(TodoStore.ARE_ALL_COMPLETE,LinkableBoolean,true);this.todos.addImmediateCallback(this,this.handleComplete,true)}_createClass(TodoStore,[{key:"handleComplete",value:function handleComplete(){if(this.checkAllComplete())this.areAllComplete.value=true}},{key:"checkAllComplete",value:function checkAllComplete(){var todoList=this.todos.getObjects();if(!todoList.length)return false;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=todoList[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var todo=_step.value;if(!todo.complete.value)return false}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}return true}},{key:"updateAll",value:function updateAll(value){this.todos.getObjects().forEach(function(todo){todo.complete.value=value})}},{key:"create",value:function create(text){var todos=this.todos;text=text.trim();if(text!==""){var newTodo=todos.requestObject(todos.generateUniqueName("Todo"),TodoApp.Todo);newTodo.text.value=text}}},{key:"destroy",value:function destroy(id){this.todos.removeObject(id)}},{key:"destroyCompleted",value:function destroyCompleted(){var _this2=this;this.todos.getObjects().forEach(function(todo){if(todo.complete.value)_this2.todos.removeObject(_this2.todos.getName(todo))})}},{key:"updateText",value:function updateText(id,text){var todo=this.todos.getObject(text);todo.text.value=text}},{key:"toggleCompleteAll",value:function toggleCompleteAll(){if(this.checkAllComplete())this.updateAll(false);else this.updateAll(true)}},{key:"toggleComplete",value:function toggleComplete(id){var todo=this.todos.getObject(id);todo.complete.value=true}},{key:"todos",get:function get(){return this.store.root.getObject(TodoStore.TODO)}},{key:"areAllComplete",get:function get(){return this.store.root.getObject(TodoStore.ARE_ALL_COMPLETE)}}],[{key:"getInstance",value:function getInstance(){if(TodoStore.instance)return TodoStore.instance;TodoStore.instance=new TodoStore;return TodoStore.instance}}]);return TodoStore}();TodoStore.TODO="todo";TodoStore.ARE_ALL_COMPLETE="areAllComplete";store.TodoStore=TodoStore})(store=TodoApp.store||(TodoApp.store={}))})(TodoApp||(TodoApp={}));var TodoApp;(function(TodoApp){var actions;(function(actions){var TodoStore=TodoApp.store.TodoStore;var TodoActions=function(){function TodoActions(){_classCallCheck(this,TodoActions)}_createClass(TodoActions,null,[{key:"create",value:function create(text){TodoStore.getInstance().create(text)}},{key:"destroy",value:function destroy(id){TodoStore.getInstance().destroy(id)}},{key:"destroyCompleted",value:function destroyCompleted(){TodoStore.getInstance().destroyCompleted()}},{key:"updateText",value:function updateText(id,text){TodoStore.getInstance().updateText(id,text)}},{key:"toggleCompleteAll",value:function toggleCompleteAll(){TodoStore.getInstance().toggleCompleteAll()}},{key:"toggleComplete",value:function toggleComplete(id){TodoStore.getInstance().toggleComplete(id)}}]);return TodoActions}();actions.TodoActions=TodoActions})(actions=TodoApp.actions||(TodoApp.actions={}))})(TodoApp||(TodoApp={}));var TodoApp;(function(TodoApp){var components;(function(components){var TodoTextInput=function(_React$Component){_inherits(TodoTextInput,_React$Component);function TodoTextInput(props){_classCallCheck(this,TodoTextInput);/**
                 * Invokes the callback passed in as onSave, allowing this component to be
                 * used in different ways.
                 */var _this3=_possibleConstructorReturn(this,Object.getPrototypeOf(TodoTextInput).call(this,props));_this3.save=function(){_this3.props.onSave(_this3.state.value);_this3.setState({value:""})};/**
                 *
                 * @param event
                 * @private
                 */_this3.onChange=function(event){_this3.setState({value:event.target.value})};/**
                 * @param event
                 * @private
                 */_this3.onKeyDown=function(event){if(event.keyCode===weavejs.util.KeyboardUtils.KEYCODES.ENTER){_this3.save()}};_this3.state={value:_this3.props.value||""};return _this3}_createClass(TodoTextInput,[{key:"render",value:function render(){return React.createElement("input",{className:this.props.className,id:this.props.id,placeholder:this.props.placeholder,onBlur:this.save,onChange:this.onChange,onKeyDown:this.onKeyDown,value:this.state.value,autoFocus:true})}}]);return TodoTextInput}(React.Component);components.TodoTextInput=TodoTextInput})(components=TodoApp.components||(TodoApp.components={}))})(TodoApp||(TodoApp={}));var TodoApp;(function(TodoApp){var components;(function(components){var Todo=TodoApp.Todo;var TodoActions=TodoApp.actions.TodoActions;var TodoItem=function(_React$Component2){_inherits(TodoItem,_React$Component2);/**
             * Copyright (c) 2014-2015, Facebook, Inc.
             * All rights reserved.
             *
             * This source code is licensed under the BSD-style license found in the
             * LICENSE file in the root directory of this source tree. An additional grant
             * of patent rights can be found in the PATENTS file in the same directory.
             */function TodoItem(props){_classCallCheck(this,TodoItem);var _this4=_possibleConstructorReturn(this,Object.getPrototypeOf(TodoItem).call(this,props));_this4.onToggleComplete=function(){TodoActions.toggleComplete(_this4.props.todo.id)};_this4.onDoubleClick=function(){_this4.setState({isEditing:true})};/**
                 * Event handler called within TodoTextInput.
                 * Defining this here allows TodoTextInput to be used in multiple places
                 * in different ways.
                 * @param  {string} text
                 */_this4.onSave=function(text){TodoActions.updateText(_this4.props.todo.id,text);_this4.setState({isEditing:false})};_this4.state={isEditing:false};return _this4}/**
             * @return {object}
             */_createClass(TodoItem,[{key:"render",value:function render(){var input;if(this.state.isEditing){input=React.createElement(components.TodoTextInput,{className:"edit",onSave:this.onSave,value:this.props.todo.text})}// List items should get the class 'editing' when editing
// and 'completed' when marked as completed.
// Note that 'completed' is a classification while 'complete' is a state.
// This differentiation between classification and state becomes important
// in the naming of view actions toggleComplete() vs. destroyCompleted().
return React.createElement("li",{className:classNames({"completed":this.props.todo.complete,"editing":this.state.isEditing})},React.createElement("div",{className:"view"},React.createElement("input",{className:"toggle",type:"checkbox",checked:this.props.todo.complete,onChange:this.onToggleComplete}),React.createElement("label",{onDoubleClick:this.onDoubleClick},this.props.todo.text),React.createElement("button",{className:"destroy",onClick:this.props.onDestroyClick})),input)}}]);return TodoItem}(React.Component);components.TodoItem=TodoItem;Weave.registerClass(Todo,"weavejs.app.TodoApp.Todo",null,"Todo")})(components=TodoApp.components||(TodoApp.components={}))})(TodoApp||(TodoApp={}));var TodoApp;(function(TodoApp){var components;(function(components){var TodoItem=TodoApp.components.TodoItem;var TodoActions=TodoApp.actions.TodoActions;var MainSection=function(_React$Component3){_inherits(MainSection,_React$Component3);function MainSection(props){_classCallCheck(this,MainSection);var _this5=_possibleConstructorReturn(this,Object.getPrototypeOf(MainSection).call(this,props));_this5.onToggleCompleteAll=function(){TodoActions.toggleCompleteAll()};_this5.onDestroyClick=function(id){TodoActions.destroy(id)};return _this5}_createClass(MainSection,[{key:"render",value:function render(){var _this6=this;var todos=this.props.allTodos.map(function(todo){return React.createElement(TodoItem,{key:todo.id,todo:todo,onDestroyClick:function onDestroyClick(){return _this6.onDestroyClick(todo.id)}})});return React.createElement("section",{id:"main"},React.createElement("input",{id:"toggle-all",type:"checkbox",onChange:this.onToggleCompleteAll,checked:this.props.areAllComplete}),React.createElement("label",{htmlFor:"toggle-all"},"Mark all as complete"),React.createElement("ul",{id:"todo-list"},todos))}},{key:"allTodos",get:function get(){return this.props.allTodos}}]);return MainSection}(React.Component);components.MainSection=MainSection})(components=TodoApp.components||(TodoApp.components={}))})(TodoApp||(TodoApp={}));/**
 * Copyright (c) 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */var TodoApp;(function(TodoApp){var components;(function(components){var TodoTextInput=TodoApp.components.TodoTextInput;var CenteredIcon=weavejs.ui.CenteredIcon;var TodoStore=TodoApp.store.TodoStore;var TodoActions=TodoApp.actions.TodoActions;var Header=function(_React$Component4){_inherits(Header,_React$Component4);function Header(){var _Object$getPrototypeO;_classCallCheck(this,Header);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key]}var _this7=_possibleConstructorReturn(this,(_Object$getPrototypeO=Object.getPrototypeOf(Header)).call.apply(_Object$getPrototypeO,[this].concat(args)));_this7.onSave=function(text){TodoActions.create(text)};_this7.undo=function(){TodoStore.getInstance().undo()};_this7.redo=function(){TodoStore.getInstance().redo()};return _this7}_createClass(Header,[{key:"render",value:function render(){return React.createElement("header",{id:"header"},React.createElement("h1",null,"todos"),React.createElement(TodoTextInput,{id:"new-todo",placeholder:"What needs to be done?",onSave:this.onSave}),React.createElement("div",{style:{float:"right"}},React.createElement(CenteredIcon,{"aria-label":"Undo",onClick:this.undo,className:classNames("weave-icon"),iconProps:{className:"fa fa-arrow-left"}}),React.createElement(CenteredIcon,{"aria-label":"Redo",onClick:this.redo,className:classNames("weave-icon"),iconProps:{className:"fa fa-arrow-right"}})))}}]);return Header}(React.Component);components.Header=Header})(components=TodoApp.components||(TodoApp.components={}))})(TodoApp||(TodoApp={}));var TodoApp;(function(TodoApp){var components;(function(components){var TodoActions=TodoApp.actions.TodoActions;var Footer=function(_React$Component5){_inherits(Footer,_React$Component5);function Footer(props){_classCallCheck(this,Footer);/**
                 * Event handler to delete all completed TODOs
                 */var _this8=_possibleConstructorReturn(this,Object.getPrototypeOf(Footer).call(this,props));_this8._onClearCompletedClick=function(){TodoActions.destroyCompleted()};return _this8}_createClass(Footer,[{key:"render",value:function render(){var total=this.props.allTodos.length;if(total===0){return null}var completed=0;this.props.allTodos.forEach(function(todo){if(todo.complete)completed++});var itemsLeft=total-completed;var itemsLeftPhrase=itemsLeft===1?" item ":" items ";itemsLeftPhrase+="left";// Undefined and thus not rendered if no completed items are left.
var clearCompletedButton;if(completed){clearCompletedButton=React.createElement("button",{id:"clear-completed",onClick:this._onClearCompletedClick},"Clear completed (",completed,")")}return React.createElement("footer",{id:"footer"},React.createElement("span",{id:"todo-count"},React.createElement("strong",null,itemsLeft),itemsLeftPhrase),clearCompletedButton)}}]);return Footer}(React.Component);components.Footer=Footer})(components=TodoApp.components||(TodoApp.components={}))})(TodoApp||(TodoApp={}));var TodoApp;(function(TodoApp){var Header=TodoApp.components.Header;var MainSection=TodoApp.components.MainSection;var Footer=TodoApp.components.Footer;var TodoStore=TodoApp.store.TodoStore;var App=function(_React$Component6){_inherits(App,_React$Component6);function App(props){_classCallCheck(this,App);var _this9=_possibleConstructorReturn(this,Object.getPrototypeOf(App).call(this,props));_this9.state=_this9.getTodoState();return _this9}/**
         * Retrieve the current TODO data from the TodoStore
         */_createClass(App,[{key:"getTodoState",value:function getTodoState(){var todoHashMap=TodoStore.getInstance().todos;var allTodos=todoHashMap.getObjects().map(function(todo){return{id:todoHashMap.getName(todo),text:todo.text.value,complete:todo.complete.value}});return{allTodos:allTodos,areAllComplete:TodoStore.getInstance().areAllComplete.value}}},{key:"componentDidMount",value:function componentDidMount(){TodoStore.getInstance().todos.addGroupedCallback(this,this.onChange)}},{key:"componentWillUnmount",value:function componentWillUnmount(){TodoStore.getInstance().todos.removeCallback(this,this.onChange)}},{key:"onChange",value:function onChange(){this.setState(this.getTodoState())}},{key:"render",value:function render(){return React.createElement("div",{style:{display:"flex",flex:1,flexDirection:"column"}},React.createElement(Header,null),React.createElement(MainSection,{allTodos:this.state.allTodos,areAllComplete:this.state.areAllComplete}),React.createElement(Footer,{allTodos:this.state.allTodos}))}}]);return App}(React.Component);TodoApp.App=App})(TodoApp||(TodoApp={}));$(function(){ReactDOM.render(React.createElement(TodoApp.App,null),document.getElementById("todo-app"))});/// <reference path="./js/Todo.ts"/>
/// <reference path="./js/store/TodoStore.ts"/>
/// <reference path="./js/actions/TodoActions.ts"/>
/// <reference path="./js/components/TodoTextInput.tsx"/>
/// <reference path="./js/components/TodoItem.tsx"/>
/// <reference path="./js/components/MainSection.tsx"/>
/// <reference path="./js/components/Header.tsx"/>
/// <reference path="./js/components/Footer.tsx"/>
/// <reference path="./js/components/TodoApp.tsx"/>
/// <reference path="./index.tsx"/>
//# sourceMappingURL=data:application/json;base64,
