import * as React from "react";
import * as weavejs from "weavejs";
import classNames from "classnames";
import TodoTextInput from "./TodoTextInput";
import TodoActions from "../actions/TodoActions";
import Dispatcher from "../dispatcher/Dispatcher";
var CenteredIcon = weavejs.ui.CenteredIcon;
export default class Header extends React.Component {
    constructor(...args) {
        super(...args);
        this.onSave = (text) => {
            TodoActions.create(text);
        };
        this.undo = () => {
            Dispatcher.history.undo();
        };
        this.redo = () => {
            Dispatcher.history.redo();
        };
    }
    render() {
        return (<header id="header">
				<h1>todos</h1>
				<TodoTextInput id="new-todo" placeholder="What needs to be done?" onSave={this.onSave}/>
				<div style={{ float: "right" }}>
					<CenteredIcon aria-label="Undo" onClick={this.undo} className={classNames("weave-icon")} iconProps={{ className: "fa fa-arrow-left" }}/>

					<CenteredIcon aria-label="Redo" onClick={this.redo} className={classNames("weave-icon")} iconProps={{ className: "fa fa-arrow-right" }}/>
				</div>
			</header>);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGVhZGVyLmpzeCIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyY190cy9qcy9jb21wb25lbnRzL0hlYWRlci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ik9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTztPQUN2QixLQUFLLE9BQU8sTUFBTSxTQUFTO09BQzNCLFVBQVUsTUFBTSxZQUFZO09BQzVCLGFBQWEsTUFBTSxpQkFBaUI7T0FDcEMsV0FBVyxNQUFNLHdCQUF3QjtPQUN6QyxVQUFVLE1BQU0sMEJBQTBCO0FBRWpELElBQUksWUFBWSxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDO0FBVTNDLG9DQUFvQyxLQUFLLENBQUMsU0FBUztJQUFuRDtRQUFvQyxlQUF5QztRQUVwRSxXQUFNLEdBQUMsQ0FBQyxJQUFXO1lBRTFCLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUIsQ0FBQyxDQUFBO1FBRU8sU0FBSSxHQUFDO1lBRVosVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUMzQixDQUFDLENBQUE7UUFFTyxTQUFJLEdBQUM7WUFFWixVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQzNCLENBQUMsQ0FBQTtJQTBCRixDQUFDO0lBeEJBLE1BQU07UUFFTCxNQUFNLENBQUMsQ0FDTixDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUNsQjtJQUFBLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQ2I7SUFBQSxDQUFDLGFBQWEsQ0FDYixFQUFFLENBQUMsVUFBVSxDQUNiLFdBQVcsQ0FBQyx3QkFBd0IsQ0FDcEMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUVyQjtJQUFBLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUMsS0FBSyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQzVCO0tBQUEsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FDMUIsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUNuQixTQUFTLENBQUMsQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FDcEMsU0FBUyxDQUFDLENBQUMsRUFBQyxTQUFTLEVBQUUsa0JBQWtCLEVBQUMsQ0FBQyxFQUVoRDs7S0FBQSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUMxQixPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQ25CLFNBQVMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUNwQyxTQUFTLENBQUMsQ0FBQyxFQUFDLFNBQVMsRUFBQyxtQkFBbUIsRUFBQyxDQUFDLEVBQ2pEO0lBQUEsRUFBRSxHQUFHLENBQ047R0FBQSxFQUFFLE1BQU0sQ0FBQyxDQUNULENBQUM7SUFDSCxDQUFDO0FBQ0YsQ0FBQztBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgKiBhcyB3ZWF2ZWpzIGZyb20gXCJ3ZWF2ZWpzXCI7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tIFwiY2xhc3NuYW1lc1wiO1xuaW1wb3J0IFRvZG9UZXh0SW5wdXQgZnJvbSBcIi4vVG9kb1RleHRJbnB1dFwiO1xuaW1wb3J0IFRvZG9BY3Rpb25zIGZyb20gXCIuLi9hY3Rpb25zL1RvZG9BY3Rpb25zXCI7XG5pbXBvcnQgRGlzcGF0Y2hlciBmcm9tIFwiLi4vZGlzcGF0Y2hlci9EaXNwYXRjaGVyXCI7XG5cbnZhciBDZW50ZXJlZEljb24gPSB3ZWF2ZWpzLnVpLkNlbnRlcmVkSWNvbjtcblxuZXhwb3J0IGludGVyZmFjZSBIZWFkZXJQcm9wc1xue1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEhlYWRlclN0YXRlXG57XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEhlYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxIZWFkZXJQcm9wcywgSGVhZGVyU3RhdGU+XG57XG5cdHByaXZhdGUgb25TYXZlPSh0ZXh0OnN0cmluZyk9PlxuXHR7XG5cdFx0VG9kb0FjdGlvbnMuY3JlYXRlKHRleHQpO1xuXHR9XG5cblx0cHJpdmF0ZSB1bmRvPSgpPT5cblx0e1xuXHRcdERpc3BhdGNoZXIuaGlzdG9yeS51bmRvKCk7XG5cdH1cblxuXHRwcml2YXRlIHJlZG89KCk9PlxuXHR7XG5cdFx0RGlzcGF0Y2hlci5oaXN0b3J5LnJlZG8oKTtcblx0fVxuXG5cdHJlbmRlcigpXG5cdHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0PGhlYWRlciBpZD1cImhlYWRlclwiPlxuXHRcdFx0XHQ8aDE+dG9kb3M8L2gxPlxuXHRcdFx0XHQ8VG9kb1RleHRJbnB1dFxuXHRcdFx0XHRcdGlkPVwibmV3LXRvZG9cIlxuXHRcdFx0XHRcdHBsYWNlaG9sZGVyPVwiV2hhdCBuZWVkcyB0byBiZSBkb25lP1wiXG5cdFx0XHRcdFx0b25TYXZlPXt0aGlzLm9uU2F2ZX1cblx0XHRcdFx0Lz5cblx0XHRcdFx0PGRpdiBzdHlsZT17e2Zsb2F0OiBcInJpZ2h0XCJ9fT5cblx0XHRcdFx0XHQ8Q2VudGVyZWRJY29uIGFyaWEtbGFiZWw9XCJVbmRvXCJcblx0XHRcdFx0XHRcdFx0XHQgIG9uQ2xpY2s9e3RoaXMudW5kb31cblx0XHRcdFx0XHRcdFx0XHQgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcIndlYXZlLWljb25cIil9XG5cdFx0XHRcdFx0XHRcdFx0ICBpY29uUHJvcHM9e3tjbGFzc05hbWU6IFwiZmEgZmEtYXJyb3ctbGVmdFwifX0vPlxuXG5cdFx0XHRcdFx0PENlbnRlcmVkSWNvbiBhcmlhLWxhYmVsPVwiUmVkb1wiXG5cdFx0XHRcdFx0XHRcdFx0ICBvbkNsaWNrPXt0aGlzLnJlZG99XG5cdFx0XHRcdFx0XHRcdFx0ICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoXCJ3ZWF2ZS1pY29uXCIpfVxuXHRcdFx0XHRcdFx0XHRcdCAgaWNvblByb3BzPXt7Y2xhc3NOYW1lOlwiZmEgZmEtYXJyb3ctcmlnaHRcIn19Lz5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQ8L2hlYWRlcj5cblx0XHQpO1xuXHR9XG59Il19