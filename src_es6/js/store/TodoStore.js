import * as weavejs from "weavejs";
import { Weave } from "weavejs";
import Dispatcher from "../dispatcher/Dispatcher";
import Todo from "../Todo";
var LinkableHashMap = weavejs.core.LinkableHashMap;
var LinkableBoolean = weavejs.core.LinkableBoolean;
class TodoStore {
    constructor() {
        this.todos = Weave.linkableChild(this, new LinkableHashMap(Todo), this.handleComplete);
        this.areAllComplete = Weave.linkableChild(this, LinkableBoolean);
    }
    addChangeListener(callback) {
        Weave.getCallbacks(this).addGroupedCallback(this, callback);
    }
    removeChangeListener(callback) {
        Weave.getCallbacks(this).removeCallback(this, callback);
    }
    getAll() {
        return this.todos.getObjects().map((todo) => {
            return {
                id: this.todos.getName(todo),
                text: todo.text.value,
                complete: todo.complete.value
            };
        });
    }
    getAreAllComplete() {
        return this.areAllComplete.value;
    }
    handleComplete() {
        if (this.checkAllComplete())
            this.areAllComplete.value = true;
        else
            this.areAllComplete.value = false;
    }
    checkAllComplete() {
        var todoList = this.todos.getObjects();
        if (!todoList.length)
            return false;
        for (var todo of todoList) {
            if (!todo.complete.value)
                return false;
        }
        return true;
    }
    updateAll(value) {
        this.todos.getObjects().forEach((todo) => {
            todo.complete.value = value;
        });
    }
    create(text) {
        var todos = this.todos;
        text = text.trim();
        if (text !== '') {
            var newTodo = todos.requestObject(todos.generateUniqueName("Todo"), Todo);
            newTodo.text.value = text;
        }
    }
    destroy(id) {
        this.todos.removeObject(id);
    }
    destroyCompleted() {
        this.todos.getObjects().forEach((todo) => {
            if (todo.complete.value)
                this.todos.removeObject(this.todos.getName(todo));
        });
    }
    updateText(id, text) {
        var todo = this.todos.getObject(text);
        todo.text.value = text;
    }
    toggleCompleteAll() {
        if (this.checkAllComplete())
            this.updateAll(false);
        else
            this.updateAll(true);
    }
    toggleComplete(id) {
        var todo = this.todos.getObject(id);
        todo.complete.value = !todo.complete.value;
    }
}
Weave.registerClass(TodoStore, "TodoAppTodoStore");
export default Dispatcher.root.requestObject("TodoStore", TodoStore, true);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9kb1N0b3JlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjX3RzL2pzL3N0b3JlL1RvZG9TdG9yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiT0FBTyxLQUFLLE9BQU8sTUFBTSxTQUFTO09BQzNCLEVBQUMsS0FBSyxFQUFDLE1BQU0sU0FBUztPQUN0QixVQUFVLE1BQU0sMEJBQTBCO09BQzFDLElBQUksTUFBTSxTQUFTO0FBRTFCLElBQU8sZUFBZSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDO0FBQ3RELElBQU8sZUFBZSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDO0FBRXREO0lBQUE7UUFFUyxVQUFLLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ2xGLG1CQUFjLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFxR3JFLENBQUM7SUFuR08saUJBQWlCLENBQUMsUUFBaUI7UUFFekMsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUVNLG9CQUFvQixDQUFDLFFBQWlCO1FBRTVDLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztJQUN6RCxDQUFDO0lBRU0sTUFBTTtRQUVaLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQVM7WUFDNUMsTUFBTSxDQUFDO2dCQUNOLEVBQUUsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7Z0JBQzVCLElBQUks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QyxFQUFTO1FBRTlCLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBUyxDQUFDO1FBQzVDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUM7SUFDNUMsQ0FBQztBQUNGLENBQUM7QUFDRCxLQUFLLENBQUMsYUFBYSxDQUFDLFNBQVMsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0FBQ25ELGVBQWUsVUFBVSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsV0FBVyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHdlYXZlanMgZnJvbSBcIndlYXZlanNcIjtcbmltcG9ydCB7V2VhdmV9IGZyb20gXCJ3ZWF2ZWpzXCI7XG5pbXBvcnQgRGlzcGF0Y2hlciBmcm9tIFwiLi4vZGlzcGF0Y2hlci9EaXNwYXRjaGVyXCI7XG5pbXBvcnQgVG9kbyBmcm9tIFwiLi4vVG9kb1wiO1xuXG5pbXBvcnQgTGlua2FibGVIYXNoTWFwID0gd2VhdmVqcy5jb3JlLkxpbmthYmxlSGFzaE1hcDtcbmltcG9ydCBMaW5rYWJsZUJvb2xlYW4gPSB3ZWF2ZWpzLmNvcmUuTGlua2FibGVCb29sZWFuO1xuXG5jbGFzcyBUb2RvU3RvcmVcbntcblx0cHJpdmF0ZSB0b2RvcyA9IFdlYXZlLmxpbmthYmxlQ2hpbGQodGhpcywgbmV3IExpbmthYmxlSGFzaE1hcChUb2RvKSwgdGhpcy5oYW5kbGVDb21wbGV0ZSk7XG5cdHByaXZhdGUgYXJlQWxsQ29tcGxldGUgPSBXZWF2ZS5saW5rYWJsZUNoaWxkKHRoaXMsIExpbmthYmxlQm9vbGVhbik7XG5cblx0cHVibGljIGFkZENoYW5nZUxpc3RlbmVyKGNhbGxiYWNrOkZ1bmN0aW9uKVxuXHR7XG5cdFx0V2VhdmUuZ2V0Q2FsbGJhY2tzKHRoaXMpLmFkZEdyb3VwZWRDYWxsYmFjayh0aGlzLCBjYWxsYmFjayk7XG5cdH1cblxuXHRwdWJsaWMgcmVtb3ZlQ2hhbmdlTGlzdGVuZXIoY2FsbGJhY2s6RnVuY3Rpb24pXG5cdHtcblx0XHRXZWF2ZS5nZXRDYWxsYmFja3ModGhpcykucmVtb3ZlQ2FsbGJhY2sodGhpcywgY2FsbGJhY2spO1xuXHR9XG5cblx0cHVibGljIGdldEFsbCgpXG5cdHtcblx0XHRyZXR1cm4gdGhpcy50b2Rvcy5nZXRPYmplY3RzKCkubWFwKCh0b2RvOlRvZG8pID0+IHtcblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdGlkOiB0aGlzLnRvZG9zLmdldE5hbWUodG9kbyksXG5cdFx0XHRcdHRleHQ6IHRvZG8udGV4dC52YWx1ZSxcblx0XHRcdFx0Y29tcGxldGU6IHRvZG8uY29tcGxldGUudmFsdWVcblx0XHRcdH07XG5cdFx0fSk7XG5cdH1cblxuXHRwdWJsaWMgZ2V0QXJlQWxsQ29tcGxldGUoKVxuXHR7XG5cdFx0cmV0dXJuIHRoaXMuYXJlQWxsQ29tcGxldGUudmFsdWU7XG5cdH1cblxuXHRwcml2YXRlIGhhbmRsZUNvbXBsZXRlKClcblx0e1xuXHRcdGlmKHRoaXMuY2hlY2tBbGxDb21wbGV0ZSgpKVxuXHRcdFx0dGhpcy5hcmVBbGxDb21wbGV0ZS52YWx1ZSA9IHRydWU7XG5cdFx0ZWxzZVxuXHRcdFx0dGhpcy5hcmVBbGxDb21wbGV0ZS52YWx1ZSA9IGZhbHNlO1xuXHR9XG5cblx0cHJpdmF0ZSBjaGVja0FsbENvbXBsZXRlKClcblx0e1xuXHRcdHZhciB0b2RvTGlzdCA9IHRoaXMudG9kb3MuZ2V0T2JqZWN0cygpO1xuXHRcdGlmKCF0b2RvTGlzdC5sZW5ndGgpXG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cblx0XHRmb3IodmFyIHRvZG8gb2YgdG9kb0xpc3QpXG5cdFx0e1xuXHRcdFx0aWYoIXRvZG8uY29tcGxldGUudmFsdWUpXG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cblxuXHRwcml2YXRlIHVwZGF0ZUFsbCh2YWx1ZTpib29sZWFuKVxuXHR7XG5cdFx0dGhpcy50b2Rvcy5nZXRPYmplY3RzKCkuZm9yRWFjaCgodG9kbzpUb2RvKSA9PiB7XG5cdFx0XHR0b2RvLmNvbXBsZXRlLnZhbHVlID0gdmFsdWU7XG5cdFx0fSk7XG5cdH1cblxuXHRwdWJsaWMgY3JlYXRlKHRleHQ6c3RyaW5nKVxuXHR7XG5cdFx0dmFyIHRvZG9zID0gdGhpcy50b2RvcztcblxuXHRcdHRleHQgPSB0ZXh0LnRyaW0oKTtcblx0XHRpZiAodGV4dCAhPT0gJycpXG5cdFx0e1xuXHRcdFx0dmFyIG5ld1RvZG8gPSB0b2Rvcy5yZXF1ZXN0T2JqZWN0KHRvZG9zLmdlbmVyYXRlVW5pcXVlTmFtZShcIlRvZG9cIiksIFRvZG8pIGFzIFRvZG87XG5cdFx0XHRuZXdUb2RvLnRleHQudmFsdWUgPSB0ZXh0O1xuXHRcdH1cblx0fVxuXG5cdHB1YmxpYyBkZXN0cm95KGlkOnN0cmluZylcblx0e1xuXHRcdHRoaXMudG9kb3MucmVtb3ZlT2JqZWN0KGlkKTtcblx0fVxuXG5cdHB1YmxpYyBkZXN0cm95Q29tcGxldGVkKClcblx0e1xuXHRcdHRoaXMudG9kb3MuZ2V0T2JqZWN0cygpLmZvckVhY2goKHRvZG86VG9kbykgID0+IHtcblx0XHRcdGlmKHRvZG8uY29tcGxldGUudmFsdWUpXG5cdFx0XHRcdHRoaXMudG9kb3MucmVtb3ZlT2JqZWN0KHRoaXMudG9kb3MuZ2V0TmFtZSh0b2RvKSk7XG5cdFx0fSk7XG5cdH1cblxuXHRwdWJsaWMgdXBkYXRlVGV4dChpZDpzdHJpbmcsIHRleHQ6c3RyaW5nKVxuXHR7XG5cdFx0dmFyIHRvZG8gPSB0aGlzLnRvZG9zLmdldE9iamVjdCh0ZXh0KSBhcyBUb2RvO1xuXHRcdHRvZG8udGV4dC52YWx1ZSA9IHRleHQ7XG5cdH1cblxuXHRwdWJsaWMgdG9nZ2xlQ29tcGxldGVBbGwoKVxuXHR7XG5cdFx0aWYodGhpcy5jaGVja0FsbENvbXBsZXRlKCkpXG5cdFx0XHR0aGlzLnVwZGF0ZUFsbChmYWxzZSk7XG5cdFx0ZWxzZVxuXHRcdFx0dGhpcy51cGRhdGVBbGwodHJ1ZSk7XG5cdH1cblxuXHRwdWJsaWMgdG9nZ2xlQ29tcGxldGUoaWQ6c3RyaW5nKVxuXHR7XG5cdFx0dmFyIHRvZG8gPSB0aGlzLnRvZG9zLmdldE9iamVjdChpZCkgYXMgVG9kbztcblx0XHR0b2RvLmNvbXBsZXRlLnZhbHVlID0gIXRvZG8uY29tcGxldGUudmFsdWU7XG5cdH1cbn1cbldlYXZlLnJlZ2lzdGVyQ2xhc3MoVG9kb1N0b3JlLCBcIlRvZG9BcHBUb2RvU3RvcmVcIik7XG5leHBvcnQgZGVmYXVsdCBEaXNwYXRjaGVyLnJvb3QucmVxdWVzdE9iamVjdChcIlRvZG9TdG9yZVwiLCBUb2RvU3RvcmUsIHRydWUpOyJdfQ==